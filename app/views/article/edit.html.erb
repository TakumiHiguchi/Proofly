<%= stylesheet_link_tag "header", :media => "all" %>
<%= form_for(@ar,:url => {:action => :update}) do |f| %>
    <%= render 'tmp/createHeader',{ file: f } %>

    <main class="main_flame">
        <div class="main_inner">
            <div class="ac-inner">
                <%# 画面上部form %>
                <%= render 'tmp/form/article',{ file: f } %>
                <%= f.text_area :content ,id: "froala-editor"%>
            </div>
        </div>
    </main>
    
    <%# ポップアップ %>
    <%= render 'tmp/form/articlePopup',{ file: f,tags:@tags} %>
<% end %>

<script>
    $(function(){
        $('.ifpaid').fadeOut();
    });
    //文字数カウント
    function ShowLength( str,id) {
       document.getElementById(id).innerHTML = str.length;
    }
    
    //ポップアップ
        $(function(){
            $('.tagm').css('display','none');
            $('.f-submit').on('click',function(){
                length[0] = parseInt($('#ias').val().length);
                length[1] = parseInt($('#nas').val().length);
                length[2] = parseInt($('.fr-element').text().length);
                if (length[2] <= 0){
                    alert("本文を入力してください");
                }else if(length[0] <= 0 || length[0] > 100){
                    alert("タイトルは1文字以上100文字以下でなくてはなりません。");
                }else if (length[1] <= 0 || length[1] > 150){
                    alert("descriptionは1文字以上150文字以下でなくてはなりません。");
                }else{
                    $('.tagm').fadeIn();
                }
                return false;
            });
            $('.close').on('click',function(){
                $('.tagm').fadeOut();
                
                return false;
            });
        });
    //ラジオボタン
    $( 'input[name="sale"]:radio' ).change( function() {
        if($(this).val() == 0){
            $('.ifpaid').fadeOut();
        }else if($(this).val() == 1){
            $('.ifpaid').fadeIn();
        }
    });
</script>




<script>
  new FroalaEditor('#froala-editor', {
     // Set custom buttons.
     toolbarButtons: {
     // Key represents the more button from the toolbar.
     moreText: {
       // List of buttons used in the  group.
       buttons: ['bold', 'italic', 'underline','h2','h3', 'strikeThrough', 'subscript', 'superscript', 'fontFamily', 'fontSize', 'textColor', 'backgroundColor', 'inlineClass', 'inlineStyle', 'clearFormatting' ],

       // Alignment of the group in the toolbar.
       align: 'left',

       // By default, 3 buttons are shown in the main toolbar. The rest of them are available when using the more button.
       buttonsVisible: 5
     },


     moreParagraph: {
       buttons: ['alignLeft', 'alignCenter', 'formatOLSimple', 'alignRight', 'alignJustify', 'formatOL', 'formatUL', 'paragraphFormat', 'paragraphStyle', 'lineHeight', 'outdent', 'indent', 'quote'],
       align: 'left',
       buttonsVisible: 3
     },

     moreRich: {
       buttons: ['insertLink', 'insertImage', 'insertVideo', 'insertTable', 'emoticons', 'fontAwesome', 'specialCharacters', 'embedly', 'insertFile', 'insertHR'],
       align: 'left',
       buttonsVisible: 3
     },

     moreMisc: {
       buttons: ['undo', 'redo', 'addPaid','fullscreen', 'print', 'getPDF', 'spellChecker', 'selectAll', 'html', 'help'],
       align: 'right',
       buttonsVisible: 3
     }
     
   },language: 'ja'
   })
   
FroalaEditor.DefineIcon('addPaid', {NAME: 'addPaid', SVG_KEY: 'add'});
FroalaEditor.RegisterCommand('addPaid', {
  title: '有料部分の追加',
  focus: false,
  undo: true,
  refreshAfterCallback: true,
  callback: function () {
    this.html.insert('<div class="paid">ここから有料部分</div>');
    this.html.insert('<p>ここに有料部分のテキストや画像を追加（有料部分は1記事に1つまでしか反映されません）</p>');
    this.html.insert('<div class="paid-end">ここまで有料部分</div>');
    this.html.insert('<p>');
    this.events.focus();
    
  }
});
$(function(){
 $('.fr-wrapper div:first-child').removeAttr('style');
});



// Define custom buttons.
FroalaEditor.DefineIcon('h2', {NAME: '<strong>H2</strong>', template: 'text'});
FroalaEditor.DefineIcon('h3', {NAME: '<strong>H3</strong>', template: 'text'});
FroalaEditor.RegisterCommand('h2', {
  title: 'Heading 1',
  callback: function () {
    this.html.insert('<h2></h2>');
}
});

FroalaEditor.RegisterCommand('h3', {
  title: 'Heading 2',
  callback: function () {
    this.html.insert('<h3>　</h3>');
  }
});
   
//画像
   $(function(){
     $fileField = $('#file')
    
     // 選択された画像を取得し表示
     $($fileField).on('change', $fileField, function(e) {
       file = e.target.files[0]
       reader = new FileReader(),
       $preview = $("#img_field");
    
       reader.onload = (function(file) {
         return function(e) {
           $preview.empty();
           $preview.append($('<img>').attr({
             src: e.target.result,
             width: "100%",
             class: "preview",
             title: file.name
           }));
         };
       })(file);
       reader.readAsDataURL(file);
     });
   });
   
   
</script>
